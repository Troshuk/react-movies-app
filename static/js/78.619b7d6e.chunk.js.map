{"version":3,"file":"static/js/78.619b7d6e.chunk.js","mappings":"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","sources":["webpack://react-movies-app/./src/components/Details/Details.module.css?cd8c","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/constants.ts","components/Details/Details.jsx","pages/MovieDetails.jsx","services/MoviesDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"Details_goBack__GmnzP\",\"container\":\"Details_container__uh1PU\",\"detailsContainer\":\"Details_detailsContainer__0wgWT\",\"text\":\"Details_text__ScnbF\",\"additionalContainer\":\"Details_additionalContainer__8JsB+\",\"additionalButtons\":\"Details_additionalButtons__kvze5\"};","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  useLocation,\n  useParams,\n  useNavigate,\n  Outlet,\n  NavLink,\n} from 'react-router-dom';\n\nimport { HOME_ROUTE } from 'routes/routes';\nimport { getMovieDetails, getImage } from 'services/MoviesDbApi';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { MOVIE_CAST_ROUTE, MOVIE_REVIEWS_ROUTE } from 'routes/routes';\n\nimport css from './Details.module.css';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport const Details = () => {\n  const location = useLocation();\n  const goBackRoute = useRef(location.state?.from ?? HOME_ROUTE);\n  const hasMovieLoaded = useRef(false);\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const score = (movie?.vote_average * 10)?.toFixed(0) ?? 0;\n\n  useEffect(() => {\n    if (!id || hasMovieLoaded.current) return;\n\n    getMovieDetails(id)\n      .then(setMovie)\n      .catch(() => navigate(goBackRoute.current))\n      .finally(() => (hasMovieLoaded.current = true));\n  }, [id, navigate]);\n\n  return (\n    <div>\n      <Link className={css.goBack} to={goBackRoute.current}>\n        <BiArrowBack /> Go Back\n      </Link>\n\n      {movie && (\n        <>\n          <div\n            className={css.container}\n            style={\n              movie.backdrop_path && {\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.8) ,rgba(0, 0, 0, 0.3)), url(${getImage(\n                  movie.backdrop_path\n                )})`,\n              }\n            }\n          >\n            <img\n              src={getImage(movie.poster_path, 'w300')}\n              alt=\"poster\"\n              width={300}\n              height={400}\n            />\n\n            <div className={css.detailsContainer}>\n              <h1>\n                {movie.original_title} ({movie.release_date?.slice(0, 4)})\n              </h1>\n\n              <h2>User Score:</h2>\n              <div style={{ width: 60, height: 60 }}>\n                <CircularProgressbar\n                  value={score}\n                  text={`${score}%`}\n                  styles={{\n                    text: {\n                      fontSize: '32px',\n                      fill: '#47bf21',\n                    },\n                    path: {\n                      stroke: `rgba(0,128,0, ${score / 100})`,\n                    },\n                  }}\n                />\n              </div>\n\n              <h2>Overview</h2>\n              <p className={css.text}>{movie.overview}</p>\n\n              <h3>Genres</h3>\n              <p className={css.text}>\n                {movie.genres?.map(({ name }) => name)?.join(' | ')}\n              </p>\n            </div>\n          </div>\n\n          <div className={css.additionalContainer}>\n            <h2>Additional Information</h2>\n\n            <ul className={css.additionalButtons}>\n              <NavLink to={MOVIE_CAST_ROUTE}>Cast</NavLink>\n              <NavLink to={MOVIE_REVIEWS_ROUTE}>Reviews</NavLink>\n            </ul>\n\n            {/* Additional information is rendered here */}\n            <Outlet />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import { Details } from 'components/Details/Details';\n\nconst MovieDetails = () => <Details />;\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst API_KEY = '894d7d0a519bf37c451c0d145e723359';\n\nconst DEFAULT_IMAGE =\n  'https://golftec-cms.s3.amazonaws.com/coachImages/no_image_available.jpg';\n\nconst TRENDING_MOVIES_ENDPOINT = 'trending/movie/day';\nconst MOVIE_DETAILS_ENDPOINT = 'movie/';\nconst MOVIE_SEARCH_ENDPOINT = 'search/movie';\nconst MOVIE_REVIEWS_ENDPOINT = 'reviews';\nconst MOVIE_CAST_ENDPOINT = 'credits';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async (page = 1) =>\n  (await api.get(TRENDING_MOVIES_ENDPOINT, { params: { page } })).data;\n\nexport const getMovies = async (query, page = 1) =>\n  (await api.get(MOVIE_SEARCH_ENDPOINT, { params: { query, page } })).data;\n\nexport const getMovieDetails = async id =>\n  (await api.get(MOVIE_DETAILS_ENDPOINT + id)).data;\n\nexport const getMovieReviews = async id =>\n  (await api.get(`${MOVIE_DETAILS_ENDPOINT}${id}/${MOVIE_REVIEWS_ENDPOINT}`))\n    .data;\n\nexport const getMovieCast = async id =>\n  (await api.get(`${MOVIE_DETAILS_ENDPOINT}${id}/${MOVIE_CAST_ENDPOINT}`)).data;\n\nexport const getImage = (path, size = 'original') =>\n  path ? `${IMAGE_BASE_URL + size}/${path}` : DEFAULT_IMAGE;\n"],"names":["Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","this","props","background","backgroundPadding","getBackgroundPadding","value","minValue","maxValue","min","max","circleRatio","classes","styles","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","Details","_location$state$from","_location$state","_toFixed","_ref","_movie$release_date","_movie$genres","_movie$genres$map","location","useLocation","goBackRoute","useRef","state","from","HOME_ROUTE","hasMovieLoaded","_useState","useState","_useState2","_slicedToArray","movie","setMovie","navigate","useNavigate","id","useParams","score","vote_average","toFixed","useEffect","current","getMovieDetails","then","catch","finally","_jsxs","children","Link","css","to","_jsx","BiArrowBack","_Fragment","backdrop_path","backgroundImage","concat","getImage","src","poster_path","alt","width","height","original_title","release_date","slice","fontSize","fill","stroke","overview","genres","map","_ref2","name","join","NavLink","MOVIE_CAST_ROUTE","MOVIE_REVIEWS_ROUTE","Outlet","IMAGE_BASE_URL","DEFAULT_IMAGE","TRENDING_MOVIES_ENDPOINT","MOVIE_DETAILS_ENDPOINT","MOVIE_SEARCH_ENDPOINT","api","axios","baseURL","params","api_key","include_adult","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","page","_args","arguments","_context","prev","next","length","undefined","get","abrupt","sent","data","stop","apply","getMovies","_callee2","query","_args2","_context2","_x","_ref3","_callee3","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","getMovieCast","_ref5","_callee5","_context5","_x4","size"],"sourceRoot":""}